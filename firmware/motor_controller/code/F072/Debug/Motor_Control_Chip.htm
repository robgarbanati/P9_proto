<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\F072\Debug\Motor_Control_Chip.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\F072\Debug\Motor_Control_Chip.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Thu Sep 17 22:15:42 2015
<BR><P>
<H3>Maximum Stack Usage =        256 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; SineDrive_init &rArr; SineDrive_create_fine_sine_table &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[31]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[21]">APU_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">APU_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[22]">ADC_IRQHandler</a> from adc.o(.text) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[d]">ADC_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[21]">APU_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[c]">APU_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[23]">EXINT_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[e]">EXINT_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[28]">GPAB_IRQHandler</a> from main.o(.text) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[13]">GPAB_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[1b]">HardFault_Handler</a> from SemiHost_Startup_Keil.o(.text) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[7]">HardFault_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[1f]">NMI_Handler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[6]">NMI_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2a]">PWM0_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[15]">PWM0_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2e]">PWRWU_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[19]">PWRWU_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[1d]">PendSV_Handler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[9]">PendSV_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2d]">RTC_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[18]">RTC_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2f]">Reset_Handler</a> from startup_n572_isp.o(STARTUP) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[2f]">Reset_Handler</a> from startup_n572_isp.o(STARTUP) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[29]">SPI0_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[14]">SPI0_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2b]">SPI1_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[16]">SPI1_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[1c]">SVC_Handler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[8]">SVC_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[1e]">SysTick_Handler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[a]">SysTick_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[25]">TMR0_IRQHandler</a> from main.o(.text) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[10]">TMR0_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[26]">TMR1_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[11]">TMR1_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[27]">TMR2_IRQHandler</a> from main.o(.text) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[12]">TMR2_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2c]">TMRF_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[17]">TMRF_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[24]">USB_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[f]">USB_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[20]">WDT_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[b]">WDT_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[30]">__main</a> from __main.o(!!!main) referenced from startup_n572_isp.o(JMPTABLE)
 <LI><a href="#[30]">__main</a> from __main.o(!!!main) referenced from startup_n572_isp.o(STARTUP)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6]"></a>NMI_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>APU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APU_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[23]"></a>EXINT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[1f]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2a]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2e]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[1d]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[29]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[1c]"></a>SVC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[1e]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[26]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2c]"></a>TMRF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[24]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[20]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[30]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[32]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[34]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[c8]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[c9]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[35]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[ca]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[39]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[cb]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[cc]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[cd]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[ce]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[cf]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[d0]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[d1]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[d2]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[d3]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[d4]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[d5]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[d6]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[d7]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[d8]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[d9]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[da]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[db]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[dc]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[dd]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[de]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[df]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[e0]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[e1]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[e2]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[e3]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[e4]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[e5]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[33]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[e6]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[36]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[38]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[e7]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; SineDrive_init &rArr; SineDrive_create_fine_sine_table &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[e8]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[aa]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[e9]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[41]"></a>is_left_safety_clip_in</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = is_left_safety_clip_in
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetInputPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_safety_clip_flags
</UL>

<P><STRONG><a name="[43]"></a>is_right_safety_clip_in</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = is_right_safety_clip_in
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetInputPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_safety_clip_flags
</UL>

<P><STRONG><a name="[ea]"></a>get_activity_button_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>GPAB_IRQHandler</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GPAB_IRQHandler &rArr; read_and_write_SPI &rArr; get_safety_clip_flags &rArr; is_right_safety_clip_in
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_and_write_SPI
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptoSensor_process_transition
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_ClearIntFlag
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetIntFlag
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetInputPinValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[25]"></a>TMR0_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[27]"></a>TMR2_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR2_IRQHandler &rArr; RGB_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[49]"></a>priorityInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>

<P><STRONG><a name="[4b]"></a>clkInit</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = clkInit &rArr; init_ADC_clock &rArr; DrvCLK_GetSrcClkAdc &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC_clock
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_UnlockKeyReg
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClkConfigRC
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_SetClkDividerHclk
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>gpioInit</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpioInit
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_SetIOMode
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>main</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = main &rArr; SineDrive_init &rArr; SineDrive_create_fine_sine_table &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_DRV8301
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setMotorMovement
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_do
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_set
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioInit
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[5a]"></a>get_safety_clip_flags</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_safety_clip_flags &rArr; is_right_safety_clip_in
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_right_safety_clip_in
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_left_safety_clip_in
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_and_write_SPI
</UL>

<P><STRONG><a name="[eb]"></a>get_desired_speed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>get_sway_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>spiSlave_Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_Open
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SingleWriteData0
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SetGo
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[61]"></a>spiSlave_Write</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spiSlave_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SingleWriteData0
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SetGo
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_and_write_SPI
</UL>

<P><STRONG><a name="[52]"></a>spiMaster_Init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spiMaster_Init &rArr; DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_Open
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_spi_master
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>spiMaster_Write</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spiMaster_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SingleWriteData0
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SetGo
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendData
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_and_write_SPI
</UL>

<P><STRONG><a name="[63]"></a>spiMaster_Xchange</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SingleWriteData0
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SetGo
</UL>

<P><STRONG><a name="[45]"></a>read_and_write_SPI</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = read_and_write_SPI &rArr; get_safety_clip_flags &rArr; is_right_safety_clip_in
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Write
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Write
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_safety_clip_flags
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetInputPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPAB_IRQHandler
</UL>

<P><STRONG><a name="[22]"></a>ADC_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_ClearAdcIntFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[4f]"></a>init_ADC_clock</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = init_ADC_clock &rArr; DrvCLK_GetSrcClkAdc &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetSrcClkAdc
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clkInit
</UL>

<P><STRONG><a name="[68]"></a>start_ADC</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_StartConvert
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_ClearAdcIntFlag
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SkipAdcUnstableInput
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[6a]"></a>init_ADC</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_WaitMillisecondTmr2
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_Open
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_AnalysisAdcCalibration
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ADC
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_StopConvert
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_StartConvert
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_SetRegulatorRC
</UL>

<P><STRONG><a name="[73]"></a>PWM_set_output2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_SineStep
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_motorOFF
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[72]"></a>PWM_set_output1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_SineStep
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_motorOFF
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[71]"></a>PWM_set_output0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_SineStep
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_motorOFF
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[54]"></a>PWM_Init</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PWM_Init &rArr; DrvPWM_StartPwmTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output0
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output1
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output2
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvPWM_StartPwmTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>SineDrive_Halt</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SineDrive_Halt &rArr; SineDrive_motorOFF
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_motorOFF
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_switchState
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_init
</UL>

<P><STRONG><a name="[55]"></a>SineDrive_init</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = SineDrive_init &rArr; SineDrive_create_fine_sine_table &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Halt
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_fine_sine_table
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_sine_table
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>SineDrive_stepUp</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_sindrive.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_do
</UL>

<P><STRONG><a name="[8f]"></a>SineDrive_stepDown</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_sindrive.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_do
</UL>

<P><STRONG><a name="[81]"></a>SineDrive_SineStep</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SineDrive_SineStep
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output0
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output1
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output2
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_do
</UL>

<P><STRONG><a name="[8a]"></a>SineDrive_setFrequency</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_sindrive.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Start
</UL>

<P><STRONG><a name="[82]"></a>SineDrive_setAmplitude</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SineDrive_setAmplitude &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Start
</UL>

<P><STRONG><a name="[86]"></a>SineDrive_setPower</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SineDrive_setPower &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Start
</UL>

<P><STRONG><a name="[ed]"></a>SineDrive_setState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_sindrive.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>SineDrive_Start</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SineDrive_Start &rArr; SineDrive_setAmplitude &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setPower
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setAmplitude
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setFrequency
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_switchState
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setMotorMovement
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_do
</UL>

<P><STRONG><a name="[8b]"></a>SineDrive_Stop</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SineDrive_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_switchState
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setMotorMovement
</UL>

<P><STRONG><a name="[ee]"></a>SineDrive_getState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_sindrive.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>SineDrive_do</STRONG> (Thumb, 660 bytes, Stack size 16 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SineDrive_do &rArr; SineDrive_Start &rArr; SineDrive_setAmplitude &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Start
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_SineStep
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_stepDown
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_stepUp
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_switchState
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>SineDrive_setMotorMovement</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SineDrive_setMotorMovement &rArr; SineDrive_Start &rArr; SineDrive_setAmplitude &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Stop
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Start
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>configure_spi_master</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_drv8301.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = configure_spi_master &rArr; spiMaster_Init &rArr; DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_DRV8301
</UL>

<P><STRONG><a name="[91]"></a>sendData</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_drv8301.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sendData &rArr; spiMaster_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCtrlReg_DRV8301
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStatus_DRV8301
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_DRV8301
</UL>

<P><STRONG><a name="[92]"></a>configure_DRV8301</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_drv8301.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = configure_DRV8301 &rArr; sendData &rArr; spiMaster_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendData
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_DRV8301
</UL>

<P><STRONG><a name="[93]"></a>getStatus_DRV8301</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_drv8301.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendData
</UL>

<P><STRONG><a name="[94]"></a>getCtrlReg_DRV8301</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_drv8301.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendData
</UL>

<P><STRONG><a name="[53]"></a>init_DRV8301</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_drv8301.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = init_DRV8301 &rArr; configure_spi_master &rArr; spiMaster_Init &rArr; DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_DRV8301
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_spi_master
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>RGB_init</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, app_softpwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RGB_init
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>RGB_handle</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, app_softpwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RGB_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_ClearOutputBit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_SetOutputBit
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>RGB_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_softpwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>OptoSensor_process_transition</STRONG> (Thumb, 256 bytes, Stack size 8 bytes, app_optosensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OptoSensor_process_transition &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPAB_IRQHandler
</UL>

<P><STRONG><a name="[ef]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_WaitMillisecondTmr2
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_Open
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC_clock
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptoSensor_process_transition
</UL>

<P><STRONG><a name="[f0]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setMotorMovement
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_do
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OptoSensor_process_transition
</UL>

<P><STRONG><a name="[f1]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setAmplitude
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_fine_sine_table
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_sine_table
</UL>

<P><STRONG><a name="[f4]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setAmplitude
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_fine_sine_table
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_sine_table
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
</UL>

<P><STRONG><a name="[99]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[98]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_fine_sine_table
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_sine_table
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[f5]"></a>_dfix</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, dfixi.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[f6]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_fine_sine_table
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_sine_table
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[f7]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_fine_sine_table
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_sine_table
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[f8]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setAmplitude
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_fine_sine_table
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_sine_table
</UL>

<P><STRONG><a name="[f9]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setAmplitude
</UL>

<P><STRONG><a name="[9d]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[9c]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ffixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setPower
</UL>

<P><STRONG><a name="[fa]"></a>_ffix</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, ffixi.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setAmplitude
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_do
</UL>

<P><STRONG><a name="[fb]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setPower
</UL>

<P><STRONG><a name="[fc]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>

<P><STRONG><a name="[fd]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[a2]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[a1]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[fe]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[a3]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[a6]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[ba]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[a7]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[bc]"></a>__ARM_scalbn</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, dscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[100]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[101]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[40]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[102]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>SemiHost_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, SemiHost_Startup_Keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_DoCommand
</UL>

<P><STRONG><a name="[ac]"></a>SH_DoCommand</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, SemiHost_Startup_Keil.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemiHost_Init
</UL>

<P><STRONG><a name="[1b]"></a>HardFault_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, SemiHost_Startup_Keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2f]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_n572_isp.o(STARTUP))

<P><STRONG><a name="[31]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_n572_isp.o(STARTUP))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[6f]"></a>DrvADC_AnalysisAdcCalibration</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, DRVADC_drvadc.o(i.DrvADC_AnalysisAdcCalibration), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_GetConversionDataSigned
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_ClearAdcIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[6b]"></a>DrvADC_Open</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, DRVADC_drvadc.o(i.DrvADC_Open), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[5c]"></a>DrvCLK_GetHclk</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, DRVCLK_drvclk_f072.o(i.DrvCLK_GetHclk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetPLLOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetSrcClkAdc
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_Open
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC_clock
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetTimerClk
</UL>

<P><STRONG><a name="[b1]"></a>DrvCLK_GetPLLOutput</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, DRVCLK_drvclk_f072.o(i.DrvCLK_GetPLLOutput))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetSrcClkAdc
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
</UL>

<P><STRONG><a name="[66]"></a>DrvCLK_GetSrcClkAdc</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, DRVCLK_drvclk_f072.o(i.DrvCLK_GetSrcClkAdc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DrvCLK_GetSrcClkAdc &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetPLLOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC_clock
</UL>

<P><STRONG><a name="[b0]"></a>DrvCLK_GetTimerClk</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, DRVCLK_drvclk_f072.o(i.DrvCLK_GetTimerClk), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetClkTmr2
</UL>

<P><STRONG><a name="[5e]"></a>DrvSPI_Open</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, DRVSPI_drvspi_f072.o(i.DrvSPI_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Init
</UL>

<P><STRONG><a name="[4c]"></a>DrvSYS_UnlockKeyReg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, DRVSYS_drvsys.o(i.DrvSYS_UnlockKeyReg))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clkInit
</UL>

<P><STRONG><a name="[6d]"></a>DrvTimer_WaitMillisecondTmr2</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, DRVTIMER_drvtimer.o(i.DrvTimer_WaitMillisecondTmr2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_OpenTmr2
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_CloseTmr2
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetClkTmr2
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[bb]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rred.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[c0]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[b7]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 838 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[bd]"></a>__kernel_cos</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[be]"></a>__kernel_poly</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[bf]"></a>__kernel_sin</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[c2]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[c3]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[c1]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[7a]"></a>sin</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_fine_sine_table
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_create_sine_table
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_do
</UL>

<P><STRONG><a name="[c4]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setPower
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_setAmplitude
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_do
</UL>

<P><STRONG><a name="[105]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[106]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[c6]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4a]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;priorityInit
</UL>

<P><STRONG><a name="[51]"></a>DrvGPIO_SetIOMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioInit
</UL>

<P><STRONG><a name="[42]"></a>DrvGPIO_GetInputPinValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPAB_IRQHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_right_safety_clip_in
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_left_safety_clip_in
</UL>

<P><STRONG><a name="[44]"></a>DrvGPIO_GetIntFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPAB_IRQHandler
</UL>

<P><STRONG><a name="[46]"></a>DrvGPIO_ClearIntFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPAB_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>DrvCLK_SetClkDividerHclk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clkInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClkConfigRC
</UL>

<P><STRONG><a name="[4d]"></a>SysClkConfigRC</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysClkConfigRC
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_SetClkDividerHclk
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clkInit
</UL>

<P><STRONG><a name="[64]"></a>DrvGPIO_GetInputPinValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_and_write_SPI
</UL>

<P><STRONG><a name="[60]"></a>DrvSPI_SetGo</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Xchange
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Write
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Write
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
</UL>

<P><STRONG><a name="[5f]"></a>DrvSPI_SingleWriteData0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Xchange
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Write
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Write
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
</UL>

<P><STRONG><a name="[6c]"></a>DrvADC_SetRegulatorRC</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[67]"></a>SkipAdcUnstableInput</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_ClearAdcIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ADC
</UL>

<P><STRONG><a name="[65]"></a>DrvADC_ClearAdcIntFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ADC
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SkipAdcUnstableInput
</UL>

<P><STRONG><a name="[69]"></a>DrvADC_StartConvert</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ADC
</UL>

<P><STRONG><a name="[6e]"></a>DrvADC_StopConvert</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[70]"></a>DrvPWM_StartPwmTimer</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DrvPWM_StartPwmTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[74]"></a>SineDrive_create_sine_table</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SineDrive_create_sine_table &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_init
</UL>

<P><STRONG><a name="[7c]"></a>SineDrive_create_fine_sine_table</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SineDrive_create_fine_sine_table &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_init
</UL>

<P><STRONG><a name="[7f]"></a>SineDrive_switchState</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_sindrive.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Stop
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Start
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Halt
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_do
</UL>

<P><STRONG><a name="[7d]"></a>SineDrive_motorOFF</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_sindrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SineDrive_motorOFF
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output0
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output1
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output2
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_Halt
</UL>

<P><STRONG><a name="[80]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_sindrive.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SineDrive_init
</UL>

<P><STRONG><a name="[95]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_softpwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_init
</UL>

<P><STRONG><a name="[96]"></a>DrvGPIO_SetOutputBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_softpwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_handle
</UL>

<P><STRONG><a name="[97]"></a>DrvGPIO_ClearOutputBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_softpwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_handle
</UL>

<P><STRONG><a name="[b]"></a>WDT_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>APU_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ADC_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXINT_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>USB_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR0_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TMR1_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TMR2_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPAB_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SPI0_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PWM0_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI1_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TMRF_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RTC_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>PWRWU_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>DrvADC_ClearAdcIntFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, DRVADC_drvadc.o(i.DrvADC_ClearAdcIntFlag), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_AnalysisAdcCalibration
</UL>

<P><STRONG><a name="[ae]"></a>DrvADC_GetConversionDataSigned</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DRVADC_drvadc.o(i.DrvADC_GetConversionDataSigned), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_AnalysisAdcCalibration
</UL>

<P><STRONG><a name="[b4]"></a>DrvCLK_DisableApbDeviceClock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DRVTIMER_drvtimer.o(i.DrvCLK_DisableApbDeviceClock), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_CloseTmr2
</UL>

<P><STRONG><a name="[b6]"></a>DrvCLK_EnableApbDeviceClock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DRVTIMER_drvtimer.o(i.DrvCLK_EnableApbDeviceClock), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_OpenTmr2
</UL>

<P><STRONG><a name="[af]"></a>DrvCLK_GetClkTmr2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, DRVTIMER_drvtimer.o(i.DrvCLK_GetClkTmr2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetTimerClk
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_WaitMillisecondTmr2
</UL>

<P><STRONG><a name="[b3]"></a>DrvSYS_ResetIP</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DRVTIMER_drvtimer.o(i.DrvSYS_ResetIP), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_OpenTmr2
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_CloseTmr2
</UL>

<P><STRONG><a name="[b2]"></a>DrvTimer_CloseTmr2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, DRVTIMER_drvtimer.o(i.DrvTimer_CloseTmr2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_ResetIP
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_DisableApbDeviceClock
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_WaitMillisecondTmr2
</UL>

<P><STRONG><a name="[b5]"></a>DrvTimer_OpenTmr2</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, DRVTIMER_drvtimer.o(i.DrvTimer_OpenTmr2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_ResetIP
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_EnableApbDeviceClock
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_WaitMillisecondTmr2
</UL>

<P><STRONG><a name="[c7]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[c5]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[a5]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[a4]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[a9]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
