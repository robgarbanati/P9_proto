<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\F072\Debug\Motor_Control_Chip.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\F072\Debug\Motor_Control_Chip.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Fri Aug 28 14:39:44 2015
<BR><P>
<H3>Maximum Stack Usage =         56 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
GPAB_IRQHandler &rArr; read_and_write_SPI &rArr; spiSlave_Write
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[31]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[21]">APU_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">APU_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[22]">ADC_IRQHandler</a> from adc.o(.text) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[d]">ADC_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[21]">APU_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[c]">APU_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[23]">EXINT_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[e]">EXINT_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[28]">GPAB_IRQHandler</a> from main.o(.text) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[13]">GPAB_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[1b]">HardFault_Handler</a> from SemiHost_Startup_Keil.o(.text) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[7]">HardFault_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[1f]">NMI_Handler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[6]">NMI_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2a]">PWM0_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[15]">PWM0_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2e]">PWRWU_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[19]">PWRWU_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[1d]">PendSV_Handler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[9]">PendSV_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2d]">RTC_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[18]">RTC_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2f]">Reset_Handler</a> from startup_n572_isp.o(STARTUP) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[2f]">Reset_Handler</a> from startup_n572_isp.o(STARTUP) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[29]">SPI0_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[14]">SPI0_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2b]">SPI1_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[16]">SPI1_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[1c]">SVC_Handler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[8]">SVC_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[1e]">SysTick_Handler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[a]">SysTick_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[25]">TMR0_IRQHandler</a> from main.o(.text) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[10]">TMR0_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[26]">TMR1_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[11]">TMR1_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[27]">TMR2_IRQHandler</a> from main.o(.text) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[12]">TMR2_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[2c]">TMRF_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[17]">TMRF_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[24]">USB_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[f]">USB_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[20]">WDT_IRQHandler</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(IRQTABLE)
 <LI><a href="#[b]">WDT_Wrapper</a> from startup_n572_isp.o(EXCEPTION) referenced from startup_n572_isp.o(RESET)
 <LI><a href="#[30]">__main</a> from __main.o(!!!main) referenced from startup_n572_isp.o(JMPTABLE)
 <LI><a href="#[30]">__main</a> from __main.o(!!!main) referenced from startup_n572_isp.o(STARTUP)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6]"></a>NMI_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>APU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APU_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[23]"></a>EXINT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[1f]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2a]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2e]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[1d]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[29]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[1c]"></a>SVC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[1e]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[26]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2c]"></a>TMRF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[24]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[20]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[30]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[32]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[34]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[8c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[8d]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[35]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[8e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[39]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[8f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))

<P><STRONG><a name="[90]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[91]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[92]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[93]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[94]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[95]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[96]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[97]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[98]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[99]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[3e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a3]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[a4]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[a5]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[a6]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[a7]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[a8]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[33]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[a9]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[36]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[38]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[aa]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; init_DRV8301 &rArr; configure_spi_master &rArr; spiMaster_Init &rArr; DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ab]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[7f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[ac]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[41]"></a>is_left_safety_clip_in</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetInputPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_safety_clip_flags
</UL>

<P><STRONG><a name="[43]"></a>is_right_safety_clip_in</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetInputPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_safety_clip_flags
</UL>

<P><STRONG><a name="[ad]"></a>get_activity_button_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>GPAB_IRQHandler</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPAB_IRQHandler &rArr; read_and_write_SPI &rArr; spiSlave_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_and_write_SPI
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_ClearIntFlag
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetIntFlag
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetInputPinValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[25]"></a>TMR0_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[27]"></a>TMR2_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR2_IRQHandler &rArr; RGB_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[48]"></a>priorityInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>

<P><STRONG><a name="[4a]"></a>clkInit</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = clkInit &rArr; init_ADC_clock &rArr; DrvCLK_GetSrcClkAdc &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC_clock
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_UnlockKeyReg
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClkConfigRC
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_SetClkDividerHclk
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>gpioInit</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpioInit
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_SetIOMode
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>MainTestFunc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>main</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main &rArr; init_DRV8301 &rArr; configure_spi_master &rArr; spiMaster_Init &rArr; DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_DRV8301
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestFunc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioInit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[55]"></a>get_safety_clip_flags</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_right_safety_clip_in
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_left_safety_clip_in
</UL>

<P><STRONG><a name="[af]"></a>get_desired_speed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>get_sway_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>get_frequency_from_state</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>

<P><STRONG><a name="[58]"></a>get_amplitude_from_state</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>

<P><STRONG><a name="[59]"></a>set_led_color_from_state</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>

<P><STRONG><a name="[51]"></a>spiSlave_Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spiSlave_Init &rArr; DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_Open
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SingleWriteData0
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SetGo
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>spiSlave_Write</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spiSlave_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SingleWriteData0
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SetGo
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_and_write_SPI
</UL>

<P><STRONG><a name="[52]"></a>spiMaster_Init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spiMaster_Init &rArr; DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_Open
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_spi_master
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>spiMaster_Write</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spiMaster_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SingleWriteData0
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SetGo
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendData
</UL>

<P><STRONG><a name="[62]"></a>spiMaster_Xchange</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SingleWriteData0
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_SetGo
</UL>

<P><STRONG><a name="[45]"></a>read_and_write_SPI</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = read_and_write_SPI &rArr; spiSlave_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Write
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_GetInputPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPAB_IRQHandler
</UL>

<P><STRONG><a name="[b1]"></a>SpiTestFunc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>ADC_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_ClearAdcIntFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[4e]"></a>init_ADC_clock</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = init_ADC_clock &rArr; DrvCLK_GetSrcClkAdc &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetSrcClkAdc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clkInit
</UL>

<P><STRONG><a name="[67]"></a>start_ADC</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_StartConvert
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_ClearAdcIntFlag
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SkipAdcUnstableInput
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[69]"></a>init_ADC</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_WaitMillisecondTmr2
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_Open
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_AnalysisAdcCalibration
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ADC
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_StopConvert
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_StartConvert
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_SetRegulatorRC
</UL>

<P><STRONG><a name="[54]"></a>TestFunc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>PWM_set_output2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pwm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[72]"></a>PWM_set_output1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pwm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[71]"></a>PWM_set_output0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pwm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[6f]"></a>PWM_Init</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, pwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output0
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output1
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_set_output2
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvPWM_StartPwmTimer
</UL>

<P><STRONG><a name="[74]"></a>configure_spi_master</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_drv8301.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = configure_spi_master &rArr; spiMaster_Init &rArr; DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_DRV8301
</UL>

<P><STRONG><a name="[75]"></a>sendData</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_drv8301.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sendData &rArr; spiMaster_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCtrlReg_DRV8301
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStatus_DRV8301
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_DRV8301
</UL>

<P><STRONG><a name="[76]"></a>configure_DRV8301</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_drv8301.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = configure_DRV8301 &rArr; sendData &rArr; spiMaster_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendData
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_DRV8301
</UL>

<P><STRONG><a name="[77]"></a>getStatus_DRV8301</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_drv8301.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendData
</UL>

<P><STRONG><a name="[78]"></a>getCtrlReg_DRV8301</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_drv8301.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendData
</UL>

<P><STRONG><a name="[53]"></a>init_DRV8301</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_drv8301.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = init_DRV8301 &rArr; configure_spi_master &rArr; spiMaster_Init &rArr; DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_DRV8301
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configure_spi_master
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>RGB_init</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, app_softpwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[47]"></a>RGB_handle</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, app_softpwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RGB_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_ClearOutputBit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvGPIO_SetOutputBit
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>RGB_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_softpwm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_led_color_from_state
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_WaitMillisecondTmr2
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_Open
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC_clock
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b9]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[40]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[ba]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>SemiHost_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, SemiHost_Startup_Keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SH_DoCommand
</UL>

<P><STRONG><a name="[81]"></a>SH_DoCommand</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, SemiHost_Startup_Keil.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemiHost_Init
</UL>

<P><STRONG><a name="[1b]"></a>HardFault_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, SemiHost_Startup_Keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(IRQTABLE)
</UL>
<P><STRONG><a name="[2f]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_n572_isp.o(STARTUP))

<P><STRONG><a name="[31]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_n572_isp.o(STARTUP))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[6e]"></a>DrvADC_AnalysisAdcCalibration</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, DRVADC_drvadc.o(i.DrvADC_AnalysisAdcCalibration), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_GetConversionDataSigned
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_ClearAdcIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[6a]"></a>DrvADC_Open</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, DRVADC_drvadc.o(i.DrvADC_Open), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[5b]"></a>DrvCLK_GetHclk</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, DRVCLK_drvclk_f072.o(i.DrvCLK_GetHclk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetPLLOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetSrcClkAdc
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSPI_Open
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC_clock
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetTimerClk
</UL>

<P><STRONG><a name="[86]"></a>DrvCLK_GetPLLOutput</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, DRVCLK_drvclk_f072.o(i.DrvCLK_GetPLLOutput))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetSrcClkAdc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
</UL>

<P><STRONG><a name="[65]"></a>DrvCLK_GetSrcClkAdc</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, DRVCLK_drvclk_f072.o(i.DrvCLK_GetSrcClkAdc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DrvCLK_GetSrcClkAdc &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetPLLOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC_clock
</UL>

<P><STRONG><a name="[85]"></a>DrvCLK_GetTimerClk</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, DRVCLK_drvclk_f072.o(i.DrvCLK_GetTimerClk), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetClkTmr2
</UL>

<P><STRONG><a name="[5d]"></a>DrvSPI_Open</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, DRVSPI_drvspi_f072.o(i.DrvSPI_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DrvSPI_Open &rArr; DrvCLK_GetHclk
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetHclk
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Init
</UL>

<P><STRONG><a name="[4b]"></a>DrvSYS_UnlockKeyReg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, DRVSYS_drvsys.o(i.DrvSYS_UnlockKeyReg))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clkInit
</UL>

<P><STRONG><a name="[6c]"></a>DrvTimer_WaitMillisecondTmr2</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, DRVTIMER_drvtimer.o(i.DrvTimer_WaitMillisecondTmr2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_OpenTmr2
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_CloseTmr2
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetClkTmr2
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[57]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, spi.o(i.__ARM_common_switch8), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_led_color_from_state
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_amplitude_from_state
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_frequency_from_state
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[49]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;priorityInit
</UL>

<P><STRONG><a name="[50]"></a>DrvGPIO_SetIOMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioInit
</UL>

<P><STRONG><a name="[42]"></a>DrvGPIO_GetInputPinValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPAB_IRQHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_right_safety_clip_in
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_left_safety_clip_in
</UL>

<P><STRONG><a name="[44]"></a>DrvGPIO_GetIntFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPAB_IRQHandler
</UL>

<P><STRONG><a name="[46]"></a>DrvGPIO_ClearIntFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPAB_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>DrvCLK_SetClkDividerHclk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clkInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysClkConfigRC
</UL>

<P><STRONG><a name="[4c]"></a>SysClkConfigRC</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysClkConfigRC
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_SetClkDividerHclk
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clkInit
</UL>

<P><STRONG><a name="[63]"></a>DrvGPIO_GetInputPinValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_and_write_SPI
</UL>

<P><STRONG><a name="[5f]"></a>DrvSPI_SetGo</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Xchange
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Write
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Write
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
</UL>

<P><STRONG><a name="[5e]"></a>DrvSPI_SingleWriteData0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Xchange
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiMaster_Write
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Write
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSlave_Init
</UL>

<P><STRONG><a name="[6b]"></a>DrvADC_SetRegulatorRC</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[66]"></a>SkipAdcUnstableInput</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_ClearAdcIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ADC
</UL>

<P><STRONG><a name="[64]"></a>DrvADC_ClearAdcIntFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ADC
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SkipAdcUnstableInput
</UL>

<P><STRONG><a name="[68]"></a>DrvADC_StartConvert</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ADC
</UL>

<P><STRONG><a name="[6d]"></a>DrvADC_StopConvert</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ADC
</UL>

<P><STRONG><a name="[70]"></a>DrvPWM_StartPwmTimer</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, pwm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[7a]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_softpwm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_init
</UL>

<P><STRONG><a name="[7c]"></a>DrvGPIO_SetOutputBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_softpwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_handle
</UL>

<P><STRONG><a name="[7b]"></a>DrvGPIO_ClearOutputBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_softpwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_handle
</UL>

<P><STRONG><a name="[b]"></a>WDT_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>APU_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ADC_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXINT_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>USB_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR0_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TMR1_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TMR2_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPAB_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SPI0_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PWM0_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI1_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TMRF_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RTC_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>PWRWU_Wrapper</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_n572_isp.o(EXCEPTION))
<BR>[Address Reference Count : 1]<UL><LI> startup_n572_isp.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>DrvADC_ClearAdcIntFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, DRVADC_drvadc.o(i.DrvADC_ClearAdcIntFlag), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_AnalysisAdcCalibration
</UL>

<P><STRONG><a name="[83]"></a>DrvADC_GetConversionDataSigned</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DRVADC_drvadc.o(i.DrvADC_GetConversionDataSigned), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvADC_AnalysisAdcCalibration
</UL>

<P><STRONG><a name="[89]"></a>DrvCLK_DisableApbDeviceClock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DRVTIMER_drvtimer.o(i.DrvCLK_DisableApbDeviceClock), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_CloseTmr2
</UL>

<P><STRONG><a name="[8b]"></a>DrvCLK_EnableApbDeviceClock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DRVTIMER_drvtimer.o(i.DrvCLK_EnableApbDeviceClock), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_OpenTmr2
</UL>

<P><STRONG><a name="[84]"></a>DrvCLK_GetClkTmr2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, DRVTIMER_drvtimer.o(i.DrvCLK_GetClkTmr2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_GetTimerClk
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_WaitMillisecondTmr2
</UL>

<P><STRONG><a name="[88]"></a>DrvSYS_ResetIP</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DRVTIMER_drvtimer.o(i.DrvSYS_ResetIP), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_OpenTmr2
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_CloseTmr2
</UL>

<P><STRONG><a name="[87]"></a>DrvTimer_CloseTmr2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, DRVTIMER_drvtimer.o(i.DrvTimer_CloseTmr2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_ResetIP
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_DisableApbDeviceClock
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_WaitMillisecondTmr2
</UL>

<P><STRONG><a name="[8a]"></a>DrvTimer_OpenTmr2</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, DRVTIMER_drvtimer.o(i.DrvTimer_OpenTmr2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvSYS_ResetIP
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvCLK_EnableApbDeviceClock
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrvTimer_WaitMillisecondTmr2
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[7e]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
